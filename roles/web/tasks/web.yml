
- name: install python packages
  pip: requirements={{ install_root }}/{{ project_name }}/requirements.txt
  notify:
  - restart gunicorn

- name: copy nginx config
  template: src=files/nginx.j2 dest=/etc/nginx/sites-enabled/{{ project_name }}.conf
  notify:
  - restart nginx

  # APPLICATION USER #
- name: Create the application user
  user: name={{ application_user }} password={{ application_user_password_hash }} state=present shell="/bin/bash"

- name: Create the application group
  group: name={{ application_group }} system=yes state=present

- name: Add the application user to the application group
  user: name={{ application_user }} group={{ application_group }} state=present
  # END OF APPLICATION USER #

- name: create static root dir
  file: path={{ static_dir }} state=directory mode=0777

- name: Make manage.py executable
  file:
    path: "{{ install_root }}/{{ project_name }}/manage.py"
    mode: 0755

- name: django collectstatic
  django_manage: command=collectstatic app_path="{{ install_root }}/{{ project_name }}" pythonpath={{ pythonpath }}

- name: copy gunicorn config
  template: src=files/gunicorn.j2 dest=/etc/init/gunicorn.conf
  notify:
  - restart gunicorn

- name: make sure nginx server is running
  service: name=nginx state=started enabled=yes

- name: make sure gunicorn server is running
  service: name=gunicorn state=started enabled=yes

# vim:ft=ansible:
